{"version":3,"file":"static/js/269.51f6c29b.chunk.js","mappings":"+NA8CA,UA1CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAY,mCAAG,8GAECC,EAAAA,EAAAA,IAAgBN,GAFjB,OAEXO,EAFW,OAGjBR,EAAWQ,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDASlB,OADAJ,IACO,WACLF,EAAgBO,OACjB,CACF,GAAE,CAACV,KAGF,8BACsB,IAAnBF,EAAQa,QACP,wBACGb,EAAQc,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,QAASf,EAAOa,EAAPb,GACzB,OACE,2BACE,wBAAKc,KACL,uBAAIC,MAFGf,EAKZ,OAGH,qEAIP,C,4PCzCKgB,EAAU,mCAEVC,EACM,gDADNA,EAEI,4CAFJA,EAGK,qCAHLA,EAIW,6CAGJC,EAAa,mCAAG,WAAMC,GAAN,sFACnBC,EAAkBH,EAC1BI,EAAAA,EAAAA,SAAAA,QAAA,UAA4BD,EAA5B,oBAAqDJ,GAF1B,SAGJK,EAAAA,EAAAA,MAHI,UAGrBC,EAHqB,SAIeA,EAASC,KAAKC,OAAhDC,EAJmB,EAInBA,gBAAiBC,EAJE,EAIFA,aACpBP,EALsB,yCAMlBQ,GANkB,0CAQjBF,GARiB,OAQCC,EAAa,GARd,YAQoBP,IARpB,2CAAH,sDAabS,EAAgB,SAAAT,GAK3B,OAAKA,EAGC,mCAAN,OAA0CA,GAFjCQ,CAGV,EAIYE,EAAiB,mCAAG,6FACvBC,EAAab,EACrBI,EAAAA,EAAAA,SAAAA,QAAA,UAA4BS,EAA5B,oBAAgDd,GAFjB,SAGRK,EAAAA,EAAAA,MAHQ,cAGzBC,EAHyB,yBAIxBA,EAASC,KAAKQ,SAJU,2CAAH,qDASjBC,EAAY,mCAAG,WAAMC,GAAN,gFAClBC,EAAWjB,EACnBI,EAAAA,EAAAA,SAAAA,QAAA,UAA4Ba,EAA5B,oBAA8ClB,EAA9C,kBAA+DiB,EAA/D,+BAF0B,SAGHZ,EAAAA,EAAAA,MAHG,cAGpBC,EAHoB,yBAInBA,EAASC,KAAKQ,SAJK,2CAAH,sDASZI,EAAe,mCAAG,WAAMC,GAAN,gFACrBC,EAAYpB,EACpBI,EAAAA,EAAAA,SAAAA,QAAA,UAA4BgB,EAA5B,YAAuCD,EAAvC,oBAA0DpB,GAF7B,SAGNK,EAAAA,EAAAA,MAHM,cAGvBC,EAHuB,yBAItBA,EAASC,MAJa,2CAAH,sDASfe,EAAe,mCAAG,WAAMF,GAAN,gFACrBC,EAAYpB,EACpBI,EAAAA,EAAAA,SAAAA,QAAA,UAA4BgB,EAA5B,YAAuCD,EAAvC,4BAAkEpB,GAFrC,SAGNK,EAAAA,EAAAA,MAHM,cAGvBC,EAHuB,yBAItBA,EAASC,KAAKgB,MAJQ,2CAAH,sDASfjC,EAAe,mCAAG,WAAM8B,GAAN,gFACrBC,EAAYpB,EACpBI,EAAAA,EAAAA,SAAAA,QAAA,UAA4BgB,EAA5B,YAAuCD,EAAvC,4BAAkEpB,EAAlE,WAF6B,SAGNK,EAAAA,EAAAA,MAHM,cAGvBC,EAHuB,yBAItBA,EAASC,KAAKQ,SAJQ,2CAAH,qD","sources":["pages/MovieDetails/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const fetchReviews = async () => {\n      try {\n        const res = await getMovieReviews(id);\n        setReviews(res);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchReviews();\n    return () => {\n      abortController.abort();\n    };\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(item => {\n            const { author, content, id } = item;\n            return (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>Wo don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport notFoundImage from '../images/notFoundImage.jpg';\n\nconst API_KEY = '4a77cd59efaf1d55812c775cbc766c97';\n\nconst ENDPOINTS = {\n  trending: 'https://api.themoviedb.org/3/trending/all/day',\n  search: 'https://api.themoviedb.org/3/search/movie',\n  details: 'https://api.themoviedb.org/3/movie',\n  configuration: 'https://api.themoviedb.org/3/configuration',\n};\n\nexport const getMovieImage = async posterPath => {\n  const { configuration } = ENDPOINTS;\n  axios.defaults.baseURL = `${configuration}?api_key=${API_KEY}`;\n  const response = await axios.get();\n  const { secure_base_url, poster_sizes } = response.data.images;\n  if (!posterPath) {\n    return notFoundImage;\n  }\n  return `${secure_base_url}${poster_sizes[2]}/${posterPath}`;\n};\n\n// getMovieImage('bPVqWiVxjXDzJOfvwGVyDOUydH5.jpg').then(console.log);\n\nexport const getActorImage = posterPath => {\n  // const { configuration } = ENDPOINTS;\n  // axios.defaults.baseURL = `${configuration}?api_key=${API_KEY}`;\n  // const response = await axios.get();\n  // const { base_url, profile_sizes } = response.data.images;\n  if (!posterPath) {\n    return notFoundImage;\n  }\n  return `https://image.tmdb.org/t/p/w185/${posterPath}`;\n};\n\n// getActorImage('/bXe9Z7QHCx7wksNX9Qg9bm4kDAr.jpg').then(console.log);\n\nexport const getTrendingMovies = async () => {\n  const { trending } = ENDPOINTS;\n  axios.defaults.baseURL = `${trending}?api_key=${API_KEY}`;\n  const response = await axios.get();\n  return response.data.results;\n};\n\n// getTrendingMovies().then(console.log);\n\nexport const searchMovies = async searchQuery => {\n  const { search } = ENDPOINTS;\n  axios.defaults.baseURL = `${search}?api_key=${API_KEY}&query=${searchQuery}&page=1&include_adult=false`;\n  const response = await axios.get();\n  return response.data.results;\n};\n\n// searchMovies('animals').then(console.log);\n\nexport const getMovieDetails = async movieId => {\n  const { details } = ENDPOINTS;\n  axios.defaults.baseURL = `${details}/${movieId}?api_key=${API_KEY}`;\n  const response = await axios.get();\n  return response.data;\n};\n\n// getMovieDetails(25713).then(console.log);\n\nexport const getMovieCredits = async movieId => {\n  const { details } = ENDPOINTS;\n  axios.defaults.baseURL = `${details}/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await axios.get();\n  return response.data.cast;\n};\n\n// getMovieCredits(25713).then(console.log);\n\nexport const getMovieReviews = async movieId => {\n  const { details } = ENDPOINTS;\n  axios.defaults.baseURL = `${details}/${movieId}/reviews?api_key=${API_KEY}&page=1`;\n  const response = await axios.get();\n  return response.data.results;\n};\n\n// getMovieReviews(881164).then(console.log);\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","abortController","AbortController","fetchReviews","getMovieReviews","res","console","log","abort","length","map","item","author","content","API_KEY","ENDPOINTS","getMovieImage","posterPath","configuration","axios","response","data","images","secure_base_url","poster_sizes","notFoundImage","getActorImage","getTrendingMovies","trending","results","searchMovies","searchQuery","search","getMovieDetails","movieId","details","getMovieCredits","cast"],"sourceRoot":""}