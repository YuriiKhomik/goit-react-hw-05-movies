{"version":3,"file":"static/js/247.8f0fcfea.chunk.js","mappings":"+NAiDA,UA7Ca,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAS,mCAAG,8GAEIC,EAAAA,EAAAA,IAAgBN,GAFpB,OAERO,EAFQ,OAGdR,EAAQQ,GAHM,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDASf,OADAJ,IACO,WACLF,EAAgBO,OACjB,CACF,GAAE,CAACV,KAGF,8BACmB,IAAhBF,EAAKa,SACJ,wBACGb,EAAKc,KAAI,SAAAC,GACR,IAAQC,EAA2CD,EAA3CC,QAASC,EAAkCF,EAAlCE,aAAcC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UACrC,OACE,2BACE,gBACEC,KAAKC,EAAAA,EAAAA,IAAcJ,GACnBK,MAAM,QACNC,IAAI,UAEN,uBAAIL,KACJ,uCAAeC,OAPRH,EAUZ,OAKV,C,4PC5CKQ,EAAU,mCAEVC,EACM,gDADNA,EAEI,4CAFJA,EAGK,qCAHLA,EAIW,6CAGJC,EAAa,mCAAG,WAAMC,GAAN,sFACnBC,EAAkBH,EAC1BI,EAAAA,EAAAA,SAAAA,QAAA,UAA4BD,EAA5B,oBAAqDJ,GAF1B,SAGJK,EAAAA,EAAAA,MAHI,UAGrBC,EAHqB,SAIQA,EAASC,KAAKC,OAAzCC,EAJmB,EAInBA,SAAUC,EAJS,EAITA,aACbP,EALsB,yCAMlBQ,GANkB,0CAQjBF,GARiB,OAQNC,EAAa,GARP,YAQaP,IARb,2CAAH,sDAabN,EAAgB,SAAAM,GAK3B,OAAKA,EAGC,kCAAN,OAAyCA,GAFhCQ,CAGV,EAIYC,EAAiB,mCAAG,6FACvBC,EAAaZ,EACrBI,EAAAA,EAAAA,SAAAA,QAAA,UAA4BQ,EAA5B,oBAAgDb,GAFjB,SAGRK,EAAAA,EAAAA,MAHQ,cAGzBC,EAHyB,yBAIxBA,EAASC,KAAKO,SAJU,2CAAH,qDASjBC,EAAY,mCAAG,WAAMC,GAAN,gFAClBC,EAAWhB,EACnBI,EAAAA,EAAAA,SAAAA,QAAA,UAA4BY,EAA5B,oBAA8CjB,EAA9C,kBAA+DgB,EAA/D,+BAF0B,SAGHX,EAAAA,EAAAA,MAHG,cAGpBC,EAHoB,yBAInBA,EAASC,KAAKO,SAJK,2CAAH,sDASZI,EAAe,mCAAG,WAAMC,GAAN,gFACrBC,EAAYnB,EACpBI,EAAAA,EAAAA,SAAAA,QAAA,UAA4Be,EAA5B,YAAuCD,EAAvC,oBAA0DnB,GAF7B,SAGNK,EAAAA,EAAAA,MAHM,cAGvBC,EAHuB,yBAItBA,EAASC,MAJa,2CAAH,sDASfvB,EAAe,mCAAG,WAAMmC,GAAN,gFACrBC,EAAYnB,EACpBI,EAAAA,EAAAA,SAAAA,QAAA,UAA4Be,EAA5B,YAAuCD,EAAvC,4BAAkEnB,GAFrC,SAGNK,EAAAA,EAAAA,MAHM,cAGvBC,EAHuB,yBAItBA,EAASC,KAAK/B,MAJQ,2CAAH,sDASf6C,EAAe,mCAAG,WAAMF,GAAN,gFACrBC,EAAYnB,EACpBI,EAAAA,EAAAA,SAAAA,QAAA,UAA4Be,EAA5B,YAAuCD,EAAvC,4BAAkEnB,EAAlE,WAF6B,SAGNK,EAAAA,EAAAA,MAHM,cAGvBC,EAHuB,yBAItBA,EAASC,KAAKO,SAJQ,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits, getActorImage } from 'services';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const fetchCast = async () => {\n      try {\n        const res = await getMovieCredits(id);\n        setCast(res);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCast();\n    return () => {\n      abortController.abort();\n    };\n  }, [id]);\n\n  return (\n    <>\n      {cast.length !== 0 && (\n        <ul>\n          {cast.map(item => {\n            const { cast_id, profile_path, name, character } = item;\n            return (\n              <li key={cast_id}>\n                <img\n                  src={getActorImage(profile_path)}\n                  width=\"100px\"\n                  alt=\"name\"\n                />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport notFoundImage from '../images/notFoundImage.jpg';\n\nconst API_KEY = '4a77cd59efaf1d55812c775cbc766c97';\n\nconst ENDPOINTS = {\n  trending: 'https://api.themoviedb.org/3/trending/all/day',\n  search: 'https://api.themoviedb.org/3/search/movie',\n  details: 'https://api.themoviedb.org/3/movie',\n  configuration: 'https://api.themoviedb.org/3/configuration',\n};\n\nexport const getMovieImage = async posterPath => {\n  const { configuration } = ENDPOINTS;\n  axios.defaults.baseURL = `${configuration}?api_key=${API_KEY}`;\n  const response = await axios.get();\n  const { base_url, poster_sizes } = response.data.images;\n  if (!posterPath) {\n    return notFoundImage;\n  }\n  return `${base_url}${poster_sizes[2]}/${posterPath}`;\n};\n\n// getMovieImage().then(console.log);\n\nexport const getActorImage = posterPath => {\n  // const { configuration } = ENDPOINTS;\n  // axios.defaults.baseURL = `${configuration}?api_key=${API_KEY}`;\n  // const response = await axios.get();\n  // const { base_url, profile_sizes } = response.data.images;\n  if (!posterPath) {\n    return notFoundImage;\n  }\n  return `http://image.tmdb.org/t/p/w185/${posterPath}`;\n};\n\n// getActorImage('/bXe9Z7QHCx7wksNX9Qg9bm4kDAr.jpg').then(console.log);\n\nexport const getTrendingMovies = async () => {\n  const { trending } = ENDPOINTS;\n  axios.defaults.baseURL = `${trending}?api_key=${API_KEY}`;\n  const response = await axios.get();\n  return response.data.results;\n};\n\n// getTrendingMovies().then(console.log);\n\nexport const searchMovies = async searchQuery => {\n  const { search } = ENDPOINTS;\n  axios.defaults.baseURL = `${search}?api_key=${API_KEY}&query=${searchQuery}&page=1&include_adult=false`;\n  const response = await axios.get();\n  return response.data.results;\n};\n\n// searchMovies('animals').then(console.log);\n\nexport const getMovieDetails = async movieId => {\n  const { details } = ENDPOINTS;\n  axios.defaults.baseURL = `${details}/${movieId}?api_key=${API_KEY}`;\n  const response = await axios.get();\n  return response.data;\n};\n\n// getMovieDetails(25713).then(console.log);\n\nexport const getMovieCredits = async movieId => {\n  const { details } = ENDPOINTS;\n  axios.defaults.baseURL = `${details}/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await axios.get();\n  return response.data.cast;\n};\n\n// getMovieCredits(25713).then(console.log);\n\nexport const getMovieReviews = async movieId => {\n  const { details } = ENDPOINTS;\n  axios.defaults.baseURL = `${details}/${movieId}/reviews?api_key=${API_KEY}&page=1`;\n  const response = await axios.get();\n  return response.data.results;\n};\n\n// getMovieReviews(881164).then(console.log);\n"],"names":["useState","cast","setCast","id","useParams","useEffect","abortController","AbortController","fetchCast","getMovieCredits","res","console","log","abort","length","map","item","cast_id","profile_path","name","character","src","getActorImage","width","alt","API_KEY","ENDPOINTS","getMovieImage","posterPath","configuration","axios","response","data","images","base_url","poster_sizes","notFoundImage","getTrendingMovies","trending","results","searchMovies","searchQuery","search","getMovieDetails","movieId","details","getMovieReviews"],"sourceRoot":""}