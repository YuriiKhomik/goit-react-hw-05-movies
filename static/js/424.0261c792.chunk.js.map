{"version":3,"file":"static/js/424.0261c792.chunk.js","mappings":"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","sources":["components/Box/Box.jsx","components/MoviesList/MoviesList.styled.jsx","components/SearchForm/SearchForm.jsx","components/SearchForm/SearchForm.styled.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport {\n  typography,\n  space,\n  layout,\n  border,\n  shadow,\n  flexbox,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  typography,\n  space,\n  layout,\n  border,\n  shadow,\n  flexbox,\n  position\n);\n","import styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { Input, StyledSearchForm, Button } from '.';\n\nconst initialValues = {\n  searchQuery: '',\n};\n\nexport const SearchForm = ({ onSubmit }) => {\n  const handleSubmit = ({ searchQuery }, { resetForm }) => {\n    if (searchQuery.trim() === '') {\n      return toast.error('Type something');\n    }\n    onSubmit(searchQuery);\n    resetForm();\n  };\n  return (\n    <Formik onSubmit={handleSubmit} initialValues={initialValues}>\n      <StyledSearchForm>\n        <Input\n          type=\"text\"\n          name=\"searchQuery\"\n          placeholder=\"Search movies\"\n          autoFocus={true}\n        />\n        <Button type=\"submit\" aria-label=\"search\">\n          Search\n        </Button>\n      </StyledSearchForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Input = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const StyledSearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  border: none\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  margin-right: 10px;\n  border: none;\n  border-radius: 4px;\n  margin-left: 10px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover {\n    color: white;\n    background-color: #f5743d;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { Box } from 'components/Box/Box';\nimport { SearchForm } from 'components/SearchForm';\nimport { searchMovies } from 'services';\n// import { FoundMoviesList } from 'components/FoundMoviesList';\nimport { MoviesList, Item } from 'components/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const abortController = new AbortController();\n\n    const fetchMovies = async () => {\n      try {\n        const movies = await searchMovies(query);\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovies();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [query]);\n\n  const handleFormSubmit = searchQuery => {\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <Box p=\"20px\">\n      <SearchForm onSubmit={handleFormSubmit} />\n      {movies.length !== 0 ? (\n        // <FoundMoviesList movies={movies} query={query} />\n        <MoviesList>\n          {movies.map(movie => {\n            const { id, title, name } = movie;\n            return (\n              <Item key={id}>\n                <Link\n                  to={`/movies/${id}`}\n                  state={{ from: `/movies?query=${query}` }}\n                >\n                  {title || name}\n                </Link>\n              </Item>\n            );\n          })}\n        </MoviesList>\n      ) : (\n        <p></p>\n      )}\n    </Box>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport notFoundImage from '../images/notFoundImage.jpg';\n\nconst API_KEY = '4a77cd59efaf1d55812c775cbc766c97';\n\nconst ENDPOINTS = {\n  trending: 'https://api.themoviedb.org/3/trending/all/day',\n  search: 'https://api.themoviedb.org/3/search/movie',\n  details: 'https://api.themoviedb.org/3/movie',\n  configuration: 'https://api.themoviedb.org/3/configuration',\n};\n\nexport const getMovieImage = async posterPath => {\n  const { configuration } = ENDPOINTS;\n  axios.defaults.baseURL = `${configuration}?api_key=${API_KEY}`;\n  const response = await axios.get();\n  const { secure_base_url, poster_sizes } = response.data.images;\n  if (!posterPath) {\n    return notFoundImage;\n  }\n  return `${secure_base_url}${poster_sizes[2]}/${posterPath}`;\n};\n\n// getMovieImage('bPVqWiVxjXDzJOfvwGVyDOUydH5.jpg').then(console.log);\n\nexport const getActorImage = posterPath => {\n  // const { configuration } = ENDPOINTS;\n  // axios.defaults.baseURL = `${configuration}?api_key=${API_KEY}`;\n  // const response = await axios.get();\n  // const { base_url, profile_sizes } = response.data.images;\n  if (!posterPath) {\n    return notFoundImage;\n  }\n  return `https://image.tmdb.org/t/p/w185/${posterPath}`;\n};\n\n// getActorImage('/bXe9Z7QHCx7wksNX9Qg9bm4kDAr.jpg').then(console.log);\n\nexport const getTrendingMovies = async () => {\n  const { trending } = ENDPOINTS;\n  axios.defaults.baseURL = `${trending}?api_key=${API_KEY}`;\n  const response = await axios.get();\n  return response.data.results;\n};\n\n// getTrendingMovies().then(console.log);\n\nexport const searchMovies = async searchQuery => {\n  const { search } = ENDPOINTS;\n  axios.defaults.baseURL = `${search}?api_key=${API_KEY}&query=${searchQuery}&page=1&include_adult=false`;\n  const response = await axios.get();\n  return response.data.results;\n};\n\n// searchMovies('animals').then(console.log);\n\nexport const getMovieDetails = async movieId => {\n  const { details } = ENDPOINTS;\n  axios.defaults.baseURL = `${details}/${movieId}?api_key=${API_KEY}`;\n  const response = await axios.get();\n  return response.data;\n};\n\n// getMovieDetails(25713).then(console.log);\n\nexport const getMovieCredits = async movieId => {\n  const { details } = ENDPOINTS;\n  axios.defaults.baseURL = `${details}/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await axios.get();\n  return response.data.cast;\n};\n\n// getMovieCredits(25713).then(console.log);\n\nexport const getMovieReviews = async movieId => {\n  const { details } = ENDPOINTS;\n  axios.defaults.baseURL = `${details}/${movieId}/reviews?api_key=${API_KEY}&page=1`;\n  const response = await axios.get();\n  return response.data.results;\n};\n\n// getMovieReviews(881164).then(console.log);\n"],"names":["Box","styled","typography","space","layout","border","shadow","flexbox","position","MoviesList","Item","initialValues","searchQuery","SearchForm","onSubmit","resetForm","trim","toast","StyledSearchForm","Input","type","name","placeholder","autoFocus","Button","Field","Form","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","abortController","AbortController","fetchMovies","searchMovies","console","log","abort","p","length","map","movie","id","title","to","state","from","API_KEY","ENDPOINTS","getMovieImage","posterPath","configuration","axios","response","data","images","secure_base_url","poster_sizes","notFoundImage","getActorImage","getTrendingMovies","trending","results","search","getMovieDetails","movieId","details","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}